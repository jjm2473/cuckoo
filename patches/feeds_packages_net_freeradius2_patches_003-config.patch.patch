Index: feeds/packages/net/freeradius2/patches/003-config.patch
===================================================================
---feeds/packages/net/freeradius2/patches/003-config.patch	
+++feeds/packages/net/freeradius2/patches/003-config.patch	
@@ -0,0 +1,311 @@
+diff -Nur a/raddb/modules/cui b/raddb/modules/cui
+--- a/raddb/modules/cui
++++ b/raddb/modules/cui
+@@ -12,14 +12,14 @@
+ 	database = "mysql"
+ 	driver = "rlm_sql_${database}"
+ 	server = "localhost"
+-	login = "db_login_name"
+-	password = "db_password"
+-	radius_db = "db_name"
+-#	sqltrace = yes
+-#	sqltracefile = ${logdir}/cuitrace.sql
++	login = "radius"
++	password = "radpass"
++	radius_db = "radius"
++	sqltrace = no
++	sqltracefile = ${logdir}/cuitrace.sql
+ 	num_sql_socks = 5
+ 	connect_failure_retry_delay = 60
+ 	cui_table = "cui"
+ 	sql_user_name = "%{User-Name}"
+-#$INCLUDE sql/${database}/cui.conf
++$INCLUDE sql/${database}/cui.conf
+ }
+diff -Nur a/raddb/radiusd.conf.in b/raddb/radiusd.conf.in
+--- a/raddb/radiusd.conf.in
++++ b/raddb/radiusd.conf.in
+@@ -323,7 +323,7 @@
+ 	#  If your system does not support this feature, you will
+ 	#  get an error if you try to use it.
+ 	#
+-	interface = br-lan
++#	interface = br-lan
+ 
+ 	#  Per-socket lists of clients.  This is a very useful feature.
+ 	#
+@@ -350,7 +350,7 @@
+ #	ipv6addr = ::
+ 	port = 0
+ 	type = acct
+-	interface = br-lan
++#	interface = br-lan
+ #	clients = per_socket_clients
+ }
+ 
+@@ -406,7 +406,7 @@
+ 	#  The command-line option "-X" over-rides this option, and forces
+ 	#  logging to go to stdout.
+ 	#
+-	destination = files
++	destination = syslog
+ 
+ 	#
+ 	#  The logging messages for the server are appended to the
+@@ -473,7 +473,7 @@
+ 	#
+ 	#  allowed values: {no, yes}
+ 	#
+-	auth = no
++	auth = yes
+ 
+ 	#  Log passwords with the authentication requests.
+ 	#  auth_badpass  - logs password if it's rejected
+@@ -481,8 +481,8 @@
+ 	#
+ 	#  allowed values: {no, yes}
+ 	#
+-	auth_badpass = no
+-	auth_goodpass = no
++	auth_badpass = yes
++	auth_goodpass = yes
+ 
+ 	#  Log additional text at the end of the "Login OK" messages.
+ 	#  for these to work, the "auth" and "auth_goopass" or "auth_badpass"
+@@ -732,7 +732,7 @@
+ 	#  Include another file that has the SQL-related configuration.
+ 	#  This is another file only because it tends to be big.
+ 	#
+-#	$INCLUDE sql.conf
++	$INCLUDE sql.conf
+ 
+ 	#
+ 	#  This module is an SQL enabled version of the counter module.
+@@ -744,7 +744,7 @@
+ 	#  totally dependent on the SQL module to process Accounting
+ 	#  packets.
+ 	#
+-#	$INCLUDE sql/mysql/counter.conf
++	$INCLUDE sql/mysql/counter.conf
+ 
+ 	#
+ 	#  IP addresses managed in an SQL table.
+@@ -791,7 +791,7 @@
+ 	#  other xlat functions such as md5, sha1 and lc.
+ 	#
+ 	#  We do not recommend removing it's listing here.
+-#	expr
++	expr
+ 
+ 	#
+ 	# We add the counter module here so that it registers
+@@ -823,7 +823,7 @@
+ #	to multiple times.
+ #
+ ######################################################################
+-#$INCLUDE policy.conf
++$INCLUDE policy.conf
+ 
+ ######################################################################
+ #
+diff -Nur a/raddb/sites-available/default b/raddb/sites-available/default
+--- a/raddb/sites-available/default
++++ b/raddb/sites-available/default
+@@ -43,7 +43,7 @@
+ #	authenticate users.
+ #
+ ######################################################################
+-
++cui_hash_key = "change-me"
+ #
+ #	In 1.x, the "authorize", etc. sections were global in
+ #	radiusd.conf.  As of 2.0, they SHOULD be in a server section.
+@@ -96,7 +96,7 @@
+ 	#
+ 	#  The chap module will set 'Auth-Type := CHAP' if we are
+ 	#  handling a CHAP request and Auth-Type has not already been set
+-#	chap
++	chap
+ 
+ 	#
+ 	#  If the users are logging in with an MS-CHAP-Challenge
+@@ -169,14 +169,14 @@
+ 
+ 	#
+ 	#  Read the 'users' file
+-	files
++#	files
+ 
+ 	#
+ 	#  Look in an SQL database.  The schema of the database
+ 	#  is meant to mirror the "users" file.
+ 	#
+ 	#  See "Authorization Queries" in sql.conf
+-#	sql
++	sql
+ 
+ 	#
+ 	#  If you are using /etc/smbpasswd, and are also doing
+@@ -211,7 +211,7 @@
+ 	#  This module should be listed last, so that the other modules
+ 	#  get a chance to set Auth-Type for themselves.
+ 	#
+-	pap
++#	pap
+ 
+ 	#
+ 	#  If "status_server = yes", then Status-Server messages are passed
+@@ -222,6 +222,7 @@
+ #	Autz-Type Status-Server {
+ #
+ #	}
++	cui_authorize
+ }
+ 
+ 
+@@ -256,9 +257,9 @@
+ 	#  PAP authentication, when a back-end database listed
+ 	#  in the 'authorize' section supplies a password.  The
+ 	#  password can be clear-text, or encrypted.
+-	Auth-Type PAP {
+-		pap
+-	}
++#	Auth-Type PAP {
++#		pap
++#	}
+ 
+ 	#
+ 	#  Most people want CHAP authentication
+@@ -271,9 +272,9 @@
+ 
+ 	#
+ 	#  MSCHAP authentication.
+-	Auth-Type MS-CHAP {
+-		mschap
+-	}
++#	Auth-Type MS-CHAP {
++#		mschap
++#	}
+ 
+ 	#
+ 	#  If you have a Cisco SIP server authenticating against
+@@ -332,7 +333,7 @@
+ #
+ #  Pre-accounting.  Decide which accounting type to use.
+ #
+-#preacct {
++preacct {
+ #	preprocess
+ 
+ 	#
+@@ -348,15 +349,15 @@
+ 	#  The start time is: NOW - delay - session_length
+ 	#
+ 
+-#	  update request {
+-#	  	FreeRADIUS-Acct-Session-Start-Time = "%{expr: %l - %{%{Acct-Session-Time}:-0} - %{%{Acct-Delay-Time}:-0}}"
+-#	}
++	update request {
++	  	FreeRADIUS-Acct-Session-Start-Time = "%{expr: %l - %{%{Acct-Session-Time}:-0} - %{%{Acct-Delay-Time}:-0}}"
++	}
+ 
+ 
+ 	#
+ 	#  Ensure that we have a semi-unique identifier for every
+ 	#  request, and many NAS boxes are broken.
+-#	acct_unique
++	acct_unique
+ 
+ 	#
+ 	#  Look for IPASS-style 'realm/', and if not found, look for
+@@ -372,7 +373,7 @@
+ 	#
+ 	#  Read the 'acct_users' file
+ #	files
+-#}
++}
+ 
+ #
+ #  Accounting.  Log the accounting data.
+@@ -405,7 +406,7 @@
+ 	#  Log traffic to an SQL database.
+ 	#
+ 	#  See "Accounting queries" in sql.conf
+-#	sql
++	sql
+ 
+ 	#
+ 	#  If you receive stop packets with zero session length,
+@@ -442,6 +443,8 @@
+ #	Acct-Type Status-Server {
+ #
+ #	}
++	cui_accounting
++	cui
+ }
+ 
+ 
+@@ -449,18 +452,18 @@
+ #  or rlm_sql module can handle this.
+ #  The rlm_sql module is *much* faster
+ session {
+-	radutmp
++#	radutmp
+ 
+ 	#
+ 	#  See "Simultaneous Use Checking Queries" in sql.conf
+-#	sql
++	sql
+ }
+ 
+ 
+ #  Post-Authentication
+ #  Once we KNOW that the user has been authenticated, there are
+ #  additional steps we can take.
+-#post-auth {
++post-auth {
+ 	#  Get an address from the IP Pool.
+ #	main_pool
+ 
+@@ -474,7 +477,7 @@
+ 	#  After authenticating the user, do another SQL query.
+ 	#
+ 	#  See "Authentication Logging Queries" in sql.conf
+-#	sql
++	sql
+ 
+ 	#
+ 	#  Instead of sending the query to the SQL server,
+@@ -585,7 +588,10 @@
+ 
+ #		attr_filter.access_reject
+ #	}
+-#}
++	cui_postauth
++	cui_updatedb
++	cui
++}
+ 
+ #
+ #  When the server decides to proxy a request to a home server,
+diff -Nur a/raddb/sql.conf b/raddb/sql.conf
+--- a/raddb/sql.conf
++++ b/raddb/sql.conf
+@@ -64,7 +64,7 @@
+ 
+ 	# If set to 'yes' (default) we read the group tables
+ 	# If set to 'no' the user MUST have Fall-Through = Yes in the radreply table
+-	# read_groups = yes
++	read_groups = yes
+ 
+ 	# Remove stale session if checkrad does not see a double login
+ 	deletestalesessions = yes
+@@ -105,7 +105,7 @@
+ 	# and security reasons, finding clients via SQL queries CANNOT
+ 	# be done "live" while the server is running.
+ 	# 
+-	#readclients = yes
++	readclients = yes
+ 
+ 	# Table to keep radius client info
+ 	nas_table = "nas"
